---
import Layout from '../layouts/Layout.astro'
---
<link rel="stylesheet" href="/Estilos/usuarios.css">
<Layout title='Usuarios'>
<main>
    <section>
        <h2 style="color: #072146;">Usuarios:</h2>
        <button class="btn-agregar">
            <img src="/Assets/icons8-user-50.png" alt="Agregar Usuario"> +
        </button>
        <table class="tabla-usuarios">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Correo Electrónico</th>
                </tr>
            </thead>
            <tbody>
                
            </tbody>
        </table>
    </section> 
    <div class="overlay">
        <div class="modal">
            <p class="DeleteText">¿Desea eliminar a Juan Pérez?</p>
            <div class="modal-acciones">
                <button class="aceptar-btn" onclick="ConfirmarEliminar()">Aceptar</button>
                <button class="cancelar-btn" onclick="CancelarEliminar()">Cancelar</button>
            </div>
        </div>
    </div>  
</main>
<script is:inline>
    let ApiUrl = "https://atbapi.websitos256.com/api/";
    let overlay = document.querySelector('.overlay');
    let EliminarModel;
    const btnAgregar = document.querySelector('.btn-agregar');
    btnAgregar.addEventListener('click', () => {
        window.location.href = '/agregar-usuario';
    });
    let Usuarios = [];
    class Usuario {
        constructor(id, nombre, correo, contraseña, idcaja, idrol) {
            this.id = id;
            this.nombre = nombre;
            this.correo = correo;
            this.contraseña = contraseña;
            this.idcaja = idcaja;
            this.idrol = idrol;
        }
    }
    async function GetUsers() {
        let JWT = sessionStorage.getItem('token');
        if(!JWT) window.location.href = '/login';
        let response = await fetch(`${ApiUrl}User`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + JWT
            }
        });
        
        if (response.ok) {
                let data = await response.json();
                let ApiUsers = data.map((u) => new Usuario(u.id, u.nombre, u.correo, u.contraseña, u.idcaja, u.idrol));
                let tableBody = document.querySelector('tbody'); // Obtén la referencia al tbody de la tabla
                
                ApiUsers.forEach(user => {
                    if(!Usuarios.find(u => u.id == user.id)) Usuarios.push(user);
                    console.log(user);
                    let tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${user.id}</td>
                        <td>${user.nombre}</td>
                        <td>${user.correo} 
                            <span class="acciones">
                                <button class="btn-editar">
                                    <img src="/Assets/Editar.png" alt="Editar" class="img-editar" id="${user.id}">
                                </button>
                                <button class="btn-eliminar">
                                    <img src="/Assets/Eliminar.png" alt="Eliminar" class="img-eliminar" id="${user.id}">
                                </button>
                            </span>
                        </td>
                    `;
                    tableBody.appendChild(tr); // Agrega la fila al tbody
                    
                });
                
            } 
            else {
                console.error('Error en la respuesta de la API:', response.status);
            }
            SetEventListener();
    }
    function SetEventListener() {
            let btnEditar = document.querySelectorAll('.img-editar');
            let btnEliminar = document.querySelectorAll('.img-eliminar');
            btnEditar.forEach(btn => {
                btn.addEventListener('click', (element) => {
                let id = element.target.id;
                if(!id) return;
                let CurrentEditingUser = Usuarios.find(c => c.id == id);
                sessionStorage.setItem('CurrentEditingUser', JSON.stringify(CurrentEditingUser));
                window.location.href = '/editar-usuario';
                
                });
            });

            btnEliminar.forEach(btn => {
                btn.addEventListener('click', (element) => {
                    let id = element.target.id;
                    if(!id) return;
                    let name = Usuarios.find(c => c.id == id).nombre;
                    let EliminarName = document.querySelector('.DeleteText');
                    overlay.style.visibility = 'visible';
                    EliminarName.innerHTML = `¿Desea eliminar a ${name}?`;
                    EliminarModel = Usuarios.find(c => c.id == id);
                });
            });
        }
        function CancelarEliminar() {
            overlay.style.visibility = 'collapse';
            EliminarModel = null;
        }
        async function ConfirmarEliminar() {
            let JWT = sessionStorage.getItem('token');
            if (!JWT) {
                window.location.href = '/login';
            } 
            else {
                try {

                    if (!EliminarModel) return;

                    let response = await fetch(`${ApiUrl}User/Eliminar/${EliminarModel.id}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': 'Bearer ' + JWT
                        }
                    });
                    if (response.ok) {
                        alert('Usuario eliminado correctamente');
                        overlay.style.visibility = 'collapse';

                        window.location.reload();
                    } else {
                        console.error('Error en la respuesta de la API:', response.status);
                    }
                } 
                catch (error) {
                    console.error('Error al obtener datos:', error);
                }
            }
        }
        function AgregarMethod() {
            window.location.href = '/agregar-usuario';
        }
    GetUsers();
</script>
</Layout>
<style>
    .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            visibility: collapse;
        }
        .modal {
            background-color: #E7E7E7;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
            text-align: center;
            max-width: 350px;
            width: 80%;
        }
        .modal p {
            font-size: 20px;
            margin-bottom: 30px;
        }
        .modal-acciones {
            display: flex;
            justify-content: space-around;
        }
        .modal-acciones button {
            width: 40%;
            padding: 15px;
            border: none;
            border-radius: 8px;
            background-color: #0065AB;
            color: #FFFFFF;
            cursor: pointer;
            font-size: 16px;
        }
        .modal-acciones button.cancelar-btn {
            background-color: #0065AB;
            color:  #CCCCCC;
        }
</style>